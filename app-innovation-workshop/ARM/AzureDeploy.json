{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "webAppSvcPlanSize": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "The instance size of the App Service Plan."
      }
    },
    "webAppSvcPlanSku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Free",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "webAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Web App."
      }
    },
    "cosmosDatabaseId": {
      "type": "string",
      "metadata": {
        "description": "The name of the cosmosdb database."
      }
    },
    "photosBlobContainerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the photos blob container."
      }
    },
    "storageQueueName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage queue"
      }
    },
    "adTenant": {
      "type": "string",
      "metadata": {
        "description": "AD B2C Tenant"
      }
    },
    "adAppId": {
      "type": "string",
      "metadata": {
        "description": "AD B2C Application Id"
      }
    },
    "adPolicy": {
      "type": "string",
      "metadata": {
        "description": "AD B2C Signin/Sign up policy"
      }
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Function app name"
      }
    },
    "computerVisionSku": {
      "type": "string",
      "metadata": {
        "description": "computer vision cognitive service SKU"
      }
    },
    "azureSearchSku": {
      "type": "string",
      "metadata": {
        "description": "Azure Search SKU"
      }
    },
    "azureSearchReplicaCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 12,
      "defaultValue": 1,
      "metadata": {
        "description": "Replicas distribute search workloads across the service. You need 2 or more to support high availability (applies to Basic and Standard only)."
      }
    },
    "azureSearchPartitionCount": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        6,
        12
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple Azure Search units."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'storage')]",
    "databaseAccountName": "[concat(uniquestring(resourceGroup().id), 'cosmosdb')]",
    "wepAppSvcPlanName": "[concat(uniquestring(resourceGroup().id), parameters('webAppName'), 'svcplan')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "computerVisionAccountName": "[concat(uniquestring(resourceGroup().id), 'computervision')]",
    "computerVisionServiceid": "[concat(resourceGroup().id,'/providers/','Microsoft.CognitiveServices/accounts/', variables('computerVisionAccountName'))]",
    "appInsightsName": "[concat(uniquestring(resourceGroup().id), 'appinsights')]",
    "azureSearchName": "[concat(uniquestring(resourceGroup().id), 'search')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('databaseAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('databaseAccountName')]",
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-08-01",
      "name": "[variables('wepAppSvcPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('webAppSvcPlanSize')]",
        "tier": "[parameters('webAppSvcPlanSku')]",
        "capacity": 1
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('webAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', variables('wepAppSvcPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('databaseAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "resources": [
        {
          "name": "[concat(parameters('webAppName'), '/appsettings')]",
          "apiVersion": "2016-08-01",
          "type": "Microsoft.Web/sites/config",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]",
            "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
          ],
          "properties": {
            "AzureCosmosDb:Endpoint": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('databaseAccountName'))).documentEndpoint]",
            "AzureCosmosDb:Key": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('databaseAccountName')), '2015-04-08').primaryMasterKey]",
            "AzureCosmosDb:DatabaseId": "[parameters('cosmosDatabaseId')]",
            "AzureStorage:Key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
            "AzureStorage:StorageAccountName": "[variables('storageAccountName')]",
            "AzureStorage:PhotosBlobContainerName": "[parameters('photosBlobContainerName')]",
            "AzureStorage:QueueName": "[parameters('storageQueueName')]",
            "ActiveDirectory:Tenant": "[parameters('adTenant')]",
            "ActiveDirectory:ApplicationId": "[parameters('adAppId')]",
            "ActiveDirectory:SignUpSignInPolicy": "[parameters('adPolicy')]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2014-04-01').InstrumentationKey]"
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('wepAppSvcPlanName'))]"
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('wepAppSvcPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('databaseAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('computerVisionAccountName'))]"
      ],
      "resources": [
        {
          "name": "[concat(parameters('functionAppName'), '/appsettings')]",
          "apiVersion": "2016-08-01",
          "type": "Microsoft.Web/sites/config",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
          ],
          "properties": {
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "FUNCTIONS_EXTENSION_VERSION": "~1",
            "CosmosDb": "[concat('AccountEndpoint=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('databaseAccountName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('databaseAccountName')), '2015-04-08').primaryMasterKey)]",
            "Ocp-Apim-Subscription-Key": "[listKeys(variables('computerVisionServiceid'),'2016-02-01-preview').key1]",
            "ComputerVisionEndpoint": "[reference(variables('computerVisionServiceid'),'2016-02-01-preview').endpoint]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2014-04-01').InstrumentationKey]"
          }
        }
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('wepAppSvcPlanName'))]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "sku": {
        "name": "[parameters('computerVisionSku')]"
      },
      "kind": "ComputerVision",
      "name": "[variables('computerVisionAccountName')]",
      "apiVersion": "2016-02-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {},
      "dependsOn": []
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "ApplicationId": "[variables('appInsightsName')]"
      }
    },
    {
      "apiVersion": "2015-08-19",
      "name": "[variables('azureSearchName')]",
      "type": "Microsoft.Search/searchServices",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[toLower(parameters('azureSearchSku'))]"
      },
      "properties": {
        "replicaCount": "[parameters('azureSearchReplicaCount')]",
        "partitionCount": "[parameters('azureSearchPartitionCount')]",
        "hostingMode": "default"
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    }
  }
}